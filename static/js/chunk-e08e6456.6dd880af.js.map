{"version":3,"sources":["webpack:///./src/views/kanban_hx/workshopCapacity.vue?7687","webpack:///src/views/kanban_hx/workshopCapacity.vue","webpack:///./src/views/kanban_hx/workshopCapacity.vue?4258","webpack:///./src/views/kanban_hx/workshopCapacity.vue?328d","webpack:///./src/views/kanban_hx/workshopCapacity.vue?b821","webpack:///./src/utils/publicFunction2.js","webpack:///./src/utils/publicFunction.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","searchData","searchOptions","on","handleSearch","ref","staticStyle","yiledKey","staticRenderFns","name","components","CardModule","searchBar","Header","data","title","groupId","time","dataTime","groupValue","date","Date","timeKeyEnum","kanbanConfig","timer","timer2","prodChartXData","prodChartData","prodChartDevices","groupLineDeviceList","allDeviceCode","currentIndex","mounted","document","documentElement","style","fontSize","window","onresize","$nextTick","clearInterval","setInterval","created","that","getGroupLineDevice","getYieldConfig","destroyed","methods","getDeviceCodes","str","length","isNaN","find","clientWidth","num","showLogo","logo","getUrlKeyMain","drawProductionChart","tooltip","trigger","axisPointer","type","grid","top","left","right","bottom","containLabel","xAxis","yAxis","series","barChart","setOption","option","addEventListener","resize","drawDeviceStateChart","legend","textStyle","color","drawUtilizationChart","icon","itemWidth","itemGap","seriesData","map","Utilization","getUtilizationData","loadData","getProductionData","getDeviceStateData","component","getTodayFirstDay","y","getFullYear","m","getMonth","d","getDate","join","timestampGetTodayFirstDay","getTodayLastDay","timestampGetTodayLastDay","getSearchToday","getTime","timestampGetSearchToday","getStartTime","setDate","year","month","day","getEndTime","nextMonthFirthDay","console","log","oneDay","endDay","deviceWorkshopLineDeviceGetTreeFunc","Promise","resolve","reject","instance","post","then","res","i","rows","code","id","dataFormatter","catch","err","deviceWorkshopTypeGetTreeFunc","workshopAndLineGetTreeFunc","deviceGroupGetTreeFunc","materialTypeGetTreeFunc","treeArray","x","value","label","r","tmpMap","l","key","pId","children","push","deepClone","obj","objClone","Array","isArray","hasOwnProperty","mixDefaultAndCustomColumns","customSetting","defaultColumns","mixedColumns","item","defaultColumn","column","field","mixedColumn","Object","assign","minWidth","width","visible","required","unshift","eType","flag","j","searchCondetionFunc","conditionArr1","groupOperator","conditionArr2","conditionJson","conditionJson1","operatorGroup","conditionJson2","formatJson","filterKeys","jsonData","index","getTimeFunc","param"],"mappings":"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","file":"static/js/chunk-e08e6456.6dd880af.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"kanban\"},[_c('Header',{attrs:{\"titleName\":\"车间稼动率看板\"}}),_c('search-bar',{attrs:{\"searchData\":_vm.searchData,\"searchOptions\":_vm.searchOptions},on:{\"search\":_vm.handleSearch}}),_c('div',{staticClass:\"kanbanContent\"},[_c('div',{staticClass:\"top_content\"},[_c('card-module',{attrs:{\"title\":\"稼动率\",\"cardBg\":\"cardBg_large\",\"titleBg\":\"cardTitle_large\",\"width\":\"100%\",\"height\":\"100%\",\"titleWidth\":\"70%\",\"isExport\":false}},[_c('div',{ref:\"Utilization\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}})])],1),_c('div',{staticClass:\"bottom_content\"},[_c('card-module',{attrs:{\"title\":_vm.yiledKey,\"width\":\"50%\",\"height\":\"100%\",\"titleWidth\":\"80%\",\"isExport\":false}},[_c('div',{ref:\"Production\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}})]),_c('card-module',{attrs:{\"title\":\"设备状态\",\"width\":\"49%\",\"height\":\"100%\",\"titleWidth\":\"80%\",\"isExport\":false}},[_c('div',{ref:\"DeviceState\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}})])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- 信维——产能推移看板 -->\n<template>\n  <div class=\"kanban\">\n    <Header titleName=\"车间稼动率看板\"></Header>\n    <search-bar @search=\"handleSearch\" :searchData=\"searchData\" :searchOptions=\"searchOptions\"></search-bar>\n    <div class=\"kanbanContent\">\n      <div class=\"top_content\">\n        <card-module title=\"稼动率\" cardBg=\"cardBg_large\" titleBg=\"cardTitle_large\" width=\"100%\" height=\"100%\"\n          titleWidth=\"70%\" :isExport=\"false\">\n          <div style=\"width: 100%; height: 100%\" ref=\"Utilization\"></div>\n        </card-module>\n      </div>\n      <div class=\"bottom_content\">\n        <card-module :title=\"yiledKey\" width=\"50%\" height=\"100%\" titleWidth=\"80%\" :isExport=\"false\">\n          <div style=\"width: 100%; height: 100%\" ref=\"Production\"></div>\n        </card-module>\n        <card-module title=\"设备状态\" width=\"49%\" height=\"100%\" titleWidth=\"80%\" :isExport=\"false\">\n          <div style=\"width: 100%; height: 100%\" ref=\"DeviceState\"></div>\n        </card-module>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import $ from 'jquery';\n// import vueSeamlessScroll from 'vue-seamless-scroll';\n// import $ from 'jquery';\nimport { fontSize } from '@/utils/common';\nimport { KANBAN_CONFIG } from '@/utils/ajaxConfigure';\nimport Header from '@/components/common/kanban/Header';\nimport CardModule from '@/components/common/kanban/CardModule';\nimport searchBar from './components/searchBar.vue';\n// import { exportJson2Excel } from '@/utils/exportExcel';\nimport { getSearchToday } from '@/utils/publicFunction2';\nimport { dataFormatter } from '@/utils/publicFunction';\nimport {\n  getAllGroupAndDeviceOpenApi,\n  getConfigurationByEnum,\n  getTimeDayTypeProduction,\n  getQueryDeviceStateTimeUtilization,\n  getManyDeviceTimeFluctuationRate\n} from '@/api/kanban';\nexport default {\n  name: 'kanban_hx_workshopcapacity',\n  components: {\n    // vueSeamlessScroll,\n    CardModule,\n    searchBar,\n    Header\n  },\n  data() {\n    return {\n      title: '',\n      groupId: 0,\n      time: '',\n      dataTime: '',\n      searchData: {\n        // groupValue: [1, 6, 7, '00000165_00000001'],\n        groupValue: [1, 6, 7],\n        date: [new Date(getSearchToday(6) + ' 00:00:00'), new Date(getSearchToday(0) + ' 23:59:59')],\n        timeKeyEnum: 'DAY'\n      },\n      searchOptions: [\n        {\n          type: 'cascader',\n          key: 'groupValue',\n          name: '车间',\n          options: []\n        },\n        {\n          type: 'daterange',\n          key: 'date',\n          name: '时间',\n          options: [\n            {\n              label: '日',\n              value: 'DAY'\n            },\n            {\n              label: '周',\n              value: 'WEEK'\n            },\n            {\n              label: '月',\n              value: 'MONTH'\n            }\n          ]\n        }\n      ],\n      kanbanConfig: { title: '', key: '', time: 15000 },\n      timer: null,\n      timer2: null,\n      prodChartXData: [],\n      prodChartData: [],\n      prodChartDevices: [],\n      yiledKey: '产量',\n      groupLineDeviceList: [],\n      allDeviceCode: [],\n      currentIndex: 0\n    };\n  },\n  mounted() {\n    document.documentElement.style.fontSize = this.fontSize() + 'px';\n    window.onresize = () => {\n      document.documentElement.style.fontSize = this.fontSize() + 'px';\n    };\n    this.$nextTick(() => {\n      this.loadData();\n    });\n    this.timer2 && clearInterval(this.timer2);\n    this.timer2 = setInterval(() => {\n      this.loadData();\n    }, this.kanbanConfig.time || 1000 * 60 * 60);\n  },\n  created() {\n    var that = this;\n    if (KANBAN_CONFIG[this.getUrlKeyMain('cid', window.location.href)]) {\n      that.kanbanConfig =\n        KANBAN_CONFIG[this.getUrlKeyMain('cid', window.location.href)];\n    }\n    this.getGroupLineDevice();\n    this.getYieldConfig();\n  },\n  destroyed() {\n    this.timer && clearInterval(this.timer);\n    this.timer2 && clearInterval(this.timer2);\n  },\n  methods: {\n    // 获取 车间 —— 产线 —— 设备\n    async getGroupLineDevice() {\n      try {\n        var param = {\n          isProductionDevice: 1\n        };\n        const res = await getAllGroupAndDeviceOpenApi(param, { secretKey: this.kanbanConfig.key });\n        for (var i = 0; i < res.rows.length; i++) {\n          if (res.rows[i].code) {\n            res.rows[i].id = res.rows[i].code;\n          }\n        }\n        this.groupLineDeviceList = res.rows;\n        const data = dataFormatter(res.rows);\n        this.searchOptions[0].options = data;\n        this.getDeviceCodes();\n        this.getUtilizationData();\n        this.timer && clearInterval(this.timer);\n        this.timer = setInterval(() => {\n          this.getUtilizationData();\n        }, 1000 * 20);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    getDeviceCodes() {\n      const { groupValue } = this.searchData;\n      if (groupValue) {\n        var str = groupValue[groupValue.length - 1];\n        if (isNaN(str)) {\n          // 设备\n          this.allDeviceCode = [str];\n        } else {\n          // 车间 - 产线\n          this.allDeviceCode = this.groupLineDeviceList.find(item => item.id === str).children.map(item => item.value);\n        }\n      }\n    },\n    fontSize(num = 10) {\n      const clientWidth =\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth;\n      if (!clientWidth) return;\n      const fontSize = clientWidth / 1920;\n      return num * fontSize;\n    },\n    showLogo() {\n      return 'logo_' + this.kanbanConfig.logo;\n    },\n    getUrlKeyMain(name, url) {\n      // eslint-disable-next-line no-sparse-arrays\n      return (\n        decodeURIComponent(\n          (new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(\n            url\n          ) || ['', ''])[1].replace(/\\+/g, '%20')\n        ) || null\n      );\n    },\n    // 获取生产配置\n    async getYieldConfig() {\n      try {\n        const condtion = {};\n        if (this.getUrlKeyMain('cid', window.location.href)) {\n          condtion.secretKey = this.kanbanConfig.key;\n        }\n        const data = await getConfigurationByEnum(\n          {\n            configurationTypeEnum: 'PRODUCTION_CONFIGURATION'\n          },\n          condtion\n        );\n        if (data.code === '0000') {\n          this.yiledKey = data.rows?.processConfiguration || '产量';\n        }\n      } catch (error) {\n        // showErrorNotify(TITLE.NOTIFY, error);\n      } finally {}\n    },\n    // 获取设备时间稼动率统计\n    async getUtilizationData() {\n      try {\n        const { timeKeyEnum, date } = this.searchData;\n        let deviceCodes = [];\n        const deviceLength = this.allDeviceCode.length;\n        if (deviceLength === 0) return;\n        if (deviceLength > 3) {\n          deviceCodes = this.allDeviceCode.slice(this.currentIndex, this.currentIndex + 3);\n          this.currentIndex = (this.currentIndex + 3) % deviceLength;\n          if (this.currentIndex < 3) {\n            this.currentIndex = 0;\n          }\n        } else {\n          deviceCodes = this.allDeviceCode;\n        }\n        const param = {\n          queryDateTypeEnum: timeKeyEnum,\n          startTime: date[0],\n          endTime: date[1],\n          deviceCodes\n        };\n        const condtion = {\n          secretKey: this.kanbanConfig.key\n        };\n        const res = await getManyDeviceTimeFluctuationRate(param, condtion);\n        let XData = [];\n        let seriesData = [];\n        if (res?.rows?.length > 0) {\n          XData = res.rows[0].timeAndValueVoList.map(item => item.time.substr(5, 5));\n          seriesData = res.rows.map(item => ({\n            name: item.deviceName,\n            value: item.timeAndValueVoList.map(val => val.value)\n          }));\n        }\n        this.drawUtilizationChart(XData, seriesData);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // 获取产量\n    async getProductionData() {\n      try {\n        const { timeKeyEnum, date, groupValue } = this.searchData;\n        const param = {\n          queryDateTypeEnum: timeKeyEnum,\n          startTime: date[0],\n          endTime: date[1]\n        };\n        const conditionJson = {\n          conditionJson1: [],\n          secretKey: this.kanbanConfig.key\n        };\n        if (groupValue) {\n          var str = groupValue[groupValue.length - 1];\n          if (isNaN(str)) {\n            conditionJson.conditionJson1.push({\n              column: 'deviceCode',\n              ptype: 'string',\n              type: 'eq',\n              value: str\n            });\n          } else {\n            conditionJson.conditionJson1.push({\n              column: 'groupId',\n              ptype: 'int',\n              type: 'eq',\n              value: str\n            });\n          }\n        }\n        const res = await getTimeDayTypeProduction(param, conditionJson);\n        const XData = [];\n        const seriesData = [];\n        if (res?.rows?.length > 0) {\n          res.rows.forEach(item => {\n            XData.push(item.time.substr(5, 5));\n            seriesData.push(item.value);\n          });\n        }\n        this.drawProductionChart(XData, seriesData);\n      } catch (error) {\n        console.log(error);\n        this.drawProductionChart([], []);\n      }\n    },\n    // 获取设备状态数据\n    async getDeviceStateData() {\n      try {\n        const { timeKeyEnum, date, groupValue } = this.searchData;\n        const param = {\n          queryDateTypeEnum: timeKeyEnum,\n          startTime: date[0],\n          endTime: date[1]\n        };\n        const conditionJson = {\n          conditionJson1: [],\n          secretKey: this.kanbanConfig.key\n        };\n        if (groupValue) {\n          var str = groupValue[groupValue.length - 1];\n          if (isNaN(str)) {\n            conditionJson.conditionJson1.push({\n              column: 'deviceCode',\n              ptype: 'string',\n              type: 'eq',\n              value: str\n            });\n          } else {\n            conditionJson.conditionJson1.push({\n              column: 'groupId',\n              ptype: 'int',\n              type: 'eq',\n              value: str\n            });\n          }\n        }\n        const res = await getQueryDeviceStateTimeUtilization(param, conditionJson);\n        const XData = [];\n        const runTimeSum = [];\n        const idleTimeSum = [];\n        if (res.rows.length > 0) {\n          res.rows.forEach(item => {\n            XData.push(item.reportTime.substr(5, 5));\n            runTimeSum.push(parseFloat(item.runTimeSum.toFixed(2)));\n            idleTimeSum.push(parseFloat(item.idleTimeSum.toFixed(2)));\n          });\n        }\n        this.drawDeviceStateChart(XData, runTimeSum, idleTimeSum);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // 产量柱状图\n    drawProductionChart(xData, seriesData) {\n      const barChart = this.$echarts.init(this.$refs.Production);\n      const option = {\n        // color: EQUIPMENT_STATUS_REPORT.COLOR,\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n          }\n        },\n        // barMaxWidth: '60%',\n        grid: {\n          top: '12%',\n          left: '3%',\n          right: '8%',\n          bottom: '8%',\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: xData,\n            axisTick: {\n              alignWithLabel: true\n            },\n            axisLine: {\n              lineStyle: {\n                color: '#929EE6'\n              }\n            },\n            axisLabel: {\n              fontSize: fontSize(14),\n              color: '#D8D8D8'\n            },\n            nameTextStyle: {\n              fontSize: fontSize(14)\n            },\n            name: '日期',\n            nameGap: '5'\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: '',\n            minInterval: 1,\n            axisLine: {\n              lineStyle: {\n                color: '#929EE6'\n              }\n            },\n            axisLabel: {\n              fontSize: fontSize(14),\n              color: '#D8D8D8'\n            },\n            nameTextStyle: {\n              fontSize: fontSize(14)\n            },\n            splitLine: {\n              show: false\n            }\n          }\n        ],\n        series: [\n          {\n            type: 'bar',\n            barWidth: '35%',\n            // itemStyle: {\n            //   color: '#09DBA0'\n            // },\n            itemStyle: {\n              color: '#EE8231'\n              // borderWidth: 1,\n              // borderColor: '#ffffff',\n              // borderRadius: 10\n            },\n            label: {\n              show: true,\n              position: 'top',\n              color: '#ffffff'\n            },\n            data: seriesData\n          }\n        ]\n      };\n      barChart.setOption(option, true);\n      window.addEventListener('resize', () => {\n        barChart.resize();\n      });\n    },\n    // 绘制设备状态柱状图\n    drawDeviceStateChart(xData, runTimeSum, idleTimeSum) {\n      const barChart = this.$echarts.init(this.$refs.DeviceState);\n      const option = {\n        // color: EQUIPMENT_STATUS_REPORT.COLOR,\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n          }\n        },\n        // barMaxWidth: '60%',\n        grid: {\n          top: '12%',\n          left: '3%',\n          right: '8%',\n          bottom: '8%',\n          containLabel: true\n        },\n        legend: {\n          // icon: 'circle',\n          top: '0',\n          right: '2%',\n          // itemWidth: fontSize(15),\n          // itemGap: fontSize(40),\n          textStyle: {\n            color: '#ffffff'\n          }\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: xData,\n            axisTick: {\n              alignWithLabel: true\n            },\n            axisLine: {\n              lineStyle: {\n                color: '#929EE6'\n              }\n            },\n            axisLabel: {\n              fontSize: fontSize(14),\n              color: '#D8D8D8'\n            },\n            nameTextStyle: {\n              fontSize: fontSize(14)\n            },\n            name: '日期',\n            nameGap: '5'\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: '分钟',\n            // minInterval: 1,\n            // splitNumber: 0.2,\n            axisLine: {\n              lineStyle: {\n                color: '#929EE6'\n              }\n            },\n            axisLabel: {\n              fontSize: fontSize(14),\n              color: '#D8D8D8'\n            },\n            nameTextStyle: {\n              fontSize: fontSize(14)\n            },\n            splitLine: {\n              show: false\n            }\n          }\n        ],\n        series: [\n          {\n            type: 'bar',\n            name: '运行',\n            stack: 'state',\n            barWidth: '40%',\n            itemStyle: {\n              color: '#09DBA0'\n            },\n            label: {\n              show: false,\n              position: 'top',\n              color: '#ffffff'\n            },\n            data: runTimeSum\n          },\n          {\n            type: 'bar',\n            name: '空闲',\n            stack: 'state',\n            barWidth: '40%',\n            itemStyle: {\n              color: '#fecf11'\n            },\n            label: {\n              show: false,\n              position: 'top',\n              color: '#ffffff'\n            },\n            data: idleTimeSum\n          }\n        ]\n      };\n      barChart.setOption(option, true);\n      window.addEventListener('resize', () => {\n        barChart.resize();\n      });\n    },\n    // 绘制稼动率折线图\n    drawUtilizationChart(XData, seriesData) {\n      const Utilization = this.$echarts.init(this.$refs.Utilization);\n      const colorList = ['#9E87FF', '#73DDFF', '#fe9a8b', '#F56948', '#9E87FF'];\n      const option = {\n        grid: {\n          top: '12%',\n          left: '3%',\n          right: '4%',\n          bottom: '8%',\n          containLabel: true\n        },\n        legend: {\n          icon: 'circle',\n          top: '2%',\n          right: '5%',\n          itemWidth: fontSize(15),\n          itemGap: fontSize(40),\n          textStyle: {\n            color: '#ffffff'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'line' // 默认为直线，可选为：'line' | 'shadow'\n          }\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: XData,\n            boundaryGap: false,\n            axisTick: {\n              alignWithLabel: true\n            },\n            axisLine: {\n              lineStyle: {\n                color: '#929EE6'\n              }\n            },\n            axisLabel: {\n              // interval: 0,\n              fontSize: fontSize(14),\n              color: '#D8D8D8'\n            },\n            nameTextStyle: {\n              fontSize: fontSize(14)\n            },\n            name: ''\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: '产量',\n            // minInterval: 1,\n            // splitNumber: 0.2,\n            // min: function(value) {\n            //   return value.min - 10;\n            // },\n            axisLine: {\n              lineStyle: {\n                color: '#929EE6'\n              }\n            },\n            axisLabel: {\n              fontSize: fontSize(14),\n              color: '#D8D8D8'\n            },\n            nameTextStyle: {\n              fontSize: fontSize(14)\n            },\n            splitLine: {\n              show: false\n            }\n          },\n          {\n            type: 'value',\n            name: '',\n            // minInterval: 1,\n            // splitNumber: 0.2,\n            axisLine: {\n              lineStyle: {\n                color: '#929EE6'\n              }\n            },\n            axisLabel: {\n              fontSize: fontSize(14),\n              color: '#D8D8D8'\n            },\n            nameTextStyle: {\n              fontSize: fontSize(14)\n            },\n            splitLine: {\n              show: false\n            }\n          }\n        ],\n        series: seriesData.map((item, index) => ({\n          name: item.name,\n          type: 'line',\n          data: item.value,\n          symbolSize: 1,\n          symbol: 'circle',\n          smooth: true,\n          yAxisIndex: 0,\n          showSymbol: false,\n          lineStyle: {\n            width: fontSize(5),\n            // color: new this.$echarts.graphic.LinearGradient(0, 1, 0, 0, [\n            //   {\n            //     offset: 0,\n            //     color: '#9effff'\n            //   },\n            //   {\n            //     offset: 1,\n            //     color: '#9E87FF'\n            //   }\n            // ]),\n            shadowColor: 'rgba(158,135,255, 0.3)',\n            shadowBlur: 10,\n            shadowOffsetY: 20\n          },\n          itemStyle: {\n            normal: {\n              color: colorList[index],\n              borderColor: colorList[index]\n            }\n          }\n        }))\n      };\n      Utilization.setOption(option, true);\n      window.addEventListener('resize', () => {\n        Utilization.resize();\n      });\n    },\n    handleSearch() {\n      this.currentIndex = 0;\n      this.getDeviceCodes();\n      this.getUtilizationData();\n      this.loadData();\n    },\n    loadData() {\n      this.getProductionData();\n      this.getDeviceStateData();\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n/deep/ * {\n  box-sizing: border-box;\n}\n\n::-webkit-scrollbar {\n  width: 0px;\n}\n\n/* 这是针对缺省样式 (必须的) */\n::-webkit-scrollbar {\n  width: 0px;\n}\n\n/* 这是针对缺省样式 (必须的) */\n@font-face {\n  font-family: Vox-Regular2;\n  src: url('~@/assets/font/VOX_WIDE_BOLD.woff');\n}\n\n@font-face {\n  font-family: JLinXin;\n  src: url('~@/assets/font/JLinXin.woff');\n}\n\np {\n  margin: 0 0 0px;\n}\n\n.kanban {\n  height: 100%;\n  background: url('~@/assets/img/kanban/background.png') no-repeat;\n  background-size: 100% 100%;\n  overflow-y: hidden;\n  color: #fff;\n}\n\n.titleHead {\n  height: 8rem;\n  width: 100%;\n  background-image: url('~@/assets/img/kanban/title4.png');\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n}\n\n.titleHead p {\n  font-size: 3.4rem;\n  font-family: JLinXin;\n  font-weight: 400;\n  color: #ffffff;\n  text-align: center;\n  text-shadow: 0.3rem 0.3rem 0.3rem #03a9f4;\n  letter-spacing: 0.4rem;\n  line-height: 5.2rem;\n}\n\n#time {\n  position: absolute;\n  right: 0.9rem;\n  top: -0.6rem;\n  letter-spacing: 0px;\n  font-size: 2rem;\n  margin: 0;\n  color: #4bf3f9;\n  font-family: Vox-Regular2;\n}\n\n.kanbanContent {\n  height: calc(100% - 15rem);\n  width: 100%;\n  padding: 0.5rem 1rem;\n\n  .top_content {\n    height: 55%;\n  }\n\n  .bottom_content {\n    display: flex;\n    justify-content: space-between;\n    height: 45%;\n  }\n}\n\n.logo {\n  position: absolute;\n  left: 0.5rem;\n  top: 0.5rem;\n  width: 12rem;\n  height: 3rem;\n  // background-image: url('~@/assets/img/kanban/logo.png');\n  background-size: 100% 100%;\n  background-repeat: no-repeat;\n}\n\n@media screen and (max-width: 1440px) {\n  html {\n    font-size: 9;\n  }\n}\n\n@media screen and (max-width: 1024px) {}\n\n@media screen and (max-width: 1000px) {}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./workshopCapacity.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./workshopCapacity.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./workshopCapacity.vue?vue&type=template&id=3803367e&scoped=true&\"\nimport script from \"./workshopCapacity.vue?vue&type=script&lang=js&\"\nexport * from \"./workshopCapacity.vue?vue&type=script&lang=js&\"\nimport style0 from \"./workshopCapacity.vue?vue&type=style&index=0&id=3803367e&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3803367e\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./workshopCapacity.vue?vue&type=style&index=0&id=3803367e&lang=less&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./workshopCapacity.vue?vue&type=style&index=0&id=3803367e&lang=less&scoped=true&\"","/*\r\n * @Descripttion: 多页面可用的封装通用接口\r\n * @version:\r\n * @Author: ZJM\r\n * @Date: 2020-04-28 15:05:45\r\n * @LastEditors: ZJM\r\n * @LastEditTime: 2022-08-18 11:15:01\r\n */\r\n// 当日最早时间\r\nexport function getTodayFirstDay() {\r\n  var y = new Date().getFullYear(); // 获取年份\r\n  var m = new Date().getMonth() + 1; // 获取月份\r\n  var d = new Date().getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n\r\n  return [y, m, d].join('-') + ' 00:00:00';\r\n}\r\n\r\n// 当日最早时间 传入指定时间戳\r\nexport function timestampGetTodayFirstDay(dataTime) {\r\n  const time = new Date(dataTime);\r\n  var y = time.getFullYear(); // 获取年份\r\n  var m = time.getMonth() + 1; // 获取月份\r\n  var d = time.getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n\r\n  return [y, m, d].join('-') + ' 00:00:00';\r\n}\r\n\r\n// 当日最晚时间\r\nexport function getTodayLastDay() {\r\n  var y = new Date().getFullYear(); // 获取年份\r\n  var m = new Date().getMonth() + 1; // 获取月份\r\n  var d = new Date().getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n\r\n  return [y, m, d].join('-') + ' 23:59:59';\r\n}\r\n\r\n// 当日最晚时间 传入指定时间戳\r\nexport function timestampGetTodayLastDay(dataTime) {\r\n  const time = new Date(dataTime);\r\n  var y = time.getFullYear(); // 获取年份\r\n  var m = time.getMonth() + 1; // 获取月份\r\n  var d = time.getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n\r\n  return [y, m, d].join('-') + ' 23:59:59';\r\n}\r\n\r\n// 提前时间\r\nexport function getSearchToday(num) {\r\n  var date = new Date(new Date().getTime() - (60 * 60 * 1000 * 24) * num);\r\n  var y = date.getFullYear(); // 获取年份\r\n  var m = date.getMonth() + 1; // 获取月份\r\n  var d = date.getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n  return [y, m, d].join('-');\r\n}\r\n\r\n// 提前时间 传入指定时间戳\r\nexport function timestampGetSearchToday(num, dataTime) {\r\n  var date = new Date(dataTime - (60 * 60 * 1000 * 24) * num);\r\n  var y = date.getFullYear(); // 获取年份\r\n  var m = date.getMonth() + 1; // 获取月份\r\n  var d = date.getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n  return [y, m, d].join('-');\r\n}\r\n\r\n// 格式转换\r\nexport function getTimeFunc(param) {\r\n  var date = new Date(param);\r\n  var y = date.getFullYear(); // 获取年份\r\n  var m = date.getMonth() + 1; // 获取月份\r\n  var d = date.getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n\r\n  return [y, m, d].join('-');\r\n}\r\n\r\n// 当月第一天\r\nexport function getStartTime() {\r\n  var date = new Date();\r\n  date.setDate(1);// 将当前时间的日期设置成第一天\r\n  var year = date.getFullYear(); // 得到当前年份\r\n  let month = date.getMonth() + 1;// 得到当前月份（0-11月份，+1是当前月份）\r\n  month = month > 10 ? month : '0' + month;// 补零\r\n  var day = date.getDate();// 得到当前天数，实际是本月第一天，因为前面setDate(1) 设置过了\r\n  day = day < 10 ? '0' + day : day; // 日数补 0\r\n\r\n  // console.log(month) 03\r\n  return year + '-' + month + '-' + day;// 这里传入的是字符串\r\n};\r\n\r\n// 当月最后一天\r\nexport function getEndTime() {\r\n  var date = new Date();\r\n  var year = date.getFullYear();\r\n  var month = date.getMonth() + 1;\r\n  month = month > 10 ? month : '0' + month;// 补零\r\n  // 这里传入的是整数时间，返回的是下个月的第一天，因为月份是0-11\r\n  var nextMonthFirthDay = new Date(year, month, 1);// 下个月的第一天\r\n  console.log(nextMonthFirthDay);\r\n  var oneDay = 1000 * 60 * 60 * 24;// 一天的时间毫秒数\r\n  var endDay = new Date(nextMonthFirthDay - oneDay);\r\n  var day = endDay.getDate(); // 本月最后一天\r\n  console.log(day);\r\n  day = day < 10 ? '0' + day : day; // 日数补 0\r\n\r\n  // 这里传入的是字符串格式的时间，返回的是传入字符串的时间\r\n  return year + '-' + month + '-' + day;\r\n};\r\n","/*\r\n * @Descripttion: 多页面可用的封装通用接口\r\n * @version:\r\n * @Author: ZJM\r\n * @Date: 2020-04-28 15:05:45\r\n * @LastEditors: ZJM\r\n * @LastEditTime: 2022-07-26 10:33:39\r\n */\r\n// 导入数据序列化\r\n\r\nimport { instance } from '@/utils/request';\r\n\r\n/**\r\n * @description: 车间-产线-设备树形【chlidren】\r\n * @param 无\r\n * @return:无\r\n * @author: ZJM\r\n */\r\nexport function deviceWorkshopLineDeviceGetTreeFunc() {\r\n  return new Promise((resolve, reject) => {\r\n    instance.post('deviceGroup/getAllGroupAndDevice.action')\r\n      .then(res => {\r\n        // var resData = { ...res.data.rows };\r\n        for (var i = 0; i < res.data.rows.length; i++) {\r\n          if (res.data.rows[i].code) {\r\n            res.data.rows[i].id = res.data.rows[i].code;\r\n          }\r\n        }\r\n        // setTimeout(() => {\r\n        // console.log('666', res.data.rows);\r\n        res.data.rows = dataFormatter(res.data.rows);\r\n        resolve(res.data);\r\n        // }, 300);\r\n      })\r\n      .catch(err => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\n\r\n/**\r\n * @description: 车间-产线-设备树形【chlidren】\r\n * @param 无\r\n * @return:无\r\n * @author: ZJM\r\n */\r\nexport function deviceWorkshopLineDeviceGetTreeFuncOpenApi() {\r\n  return new Promise((resolve, reject) => {\r\n    instance.post('open-api/TvBoard/device/getAllGroupAndDevice.action')\r\n      .then(res => {\r\n        // var resData = { ...res.data.rows };\r\n        for (var i = 0; i < res.data.rows.length; i++) {\r\n          if (res.data.rows[i].code) {\r\n            res.data.rows[i].id = res.data.rows[i].code;\r\n          }\r\n        }\r\n        // setTimeout(() => {\r\n        // console.log('666', res.data.rows);\r\n        res.data.rows = dataFormatter(res.data.rows);\r\n        resolve(res.data);\r\n        // }, 300);\r\n      })\r\n      .catch(err => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\n\r\n/**\r\n * @description: 车间分组树形【chlidren】\r\n * @param 无\r\n * @return:无\r\n * @author: ZJM\r\n */\r\nexport function deviceWorkshopTypeGetTreeFunc() {\r\n  return new Promise((resolve, reject) => {\r\n    instance.post('deviceWorkshopType/getTree.action')\r\n      .then(res => {\r\n        res.data.rows = dataFormatter(res.data.rows);\r\n        resolve(res.data);\r\n      })\r\n      .catch(err => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\n\r\n/**\r\n * @description: 车间-产线分组树形【chlidren】\r\n * @param 无\r\n * @return:无\r\n * @author: ZJM\r\n */\r\nexport function workshopAndLineGetTreeFunc() {\r\n  return new Promise((resolve, reject) => {\r\n    instance.post('deviceGroup/getListGroupAndProductionLine.action')\r\n      .then(res => {\r\n        res.data.rows = dataFormatter(res.data.rows);\r\n        resolve(res.data);\r\n      })\r\n      .catch(err => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\n\r\n/**\r\n * @description: 设备类型树形【chlidren】\r\n * @param 无\r\n * @return:无\r\n * @author: ZJM\r\n */\r\nexport function deviceGroupGetTreeFunc() {\r\n  return new Promise((resolve, reject) => {\r\n    instance.post('deviceGroup/getTree.action?')\r\n      .then(res => {\r\n        res.data.rows = dataFormatter(res.data.rows);\r\n        resolve(res.data);\r\n      })\r\n      .catch(err => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\n\r\n/**\r\n * @description: 物料类型树形【chlidren】\r\n * @param 无\r\n * @return:无\r\n * @author: ZJM\r\n */\r\nexport function materialTypeGetTreeFunc() {\r\n  return new Promise((resolve, reject) => {\r\n    instance.post('materialsType/getTree.action?')\r\n      .then(res => {\r\n        if (res.data.rows) {\r\n          res.data.rows = dataFormatter(res.data.rows);\r\n        } else {\r\n          res.data.rows = [];\r\n        }\r\n        resolve(res.data);\r\n      })\r\n      .catch(err => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\n\r\n/**\r\n * @description: 返回数据格式化\r\n * @param data rows数据\r\n * @return: 格式化后数据\r\n * @author: ZJM\r\n */\r\nexport function dataFormatter(data) {\r\n  var treeArray = data;\r\n  for (var x in treeArray) {\r\n    treeArray[x].value = treeArray[x].id;\r\n    treeArray[x].label = treeArray[x].name;\r\n  }\r\n  var r = [];\r\n  var tmpMap = {};\r\n  for (var i = 0, l = treeArray.length; i < l; i++) {\r\n    tmpMap[treeArray[i].id] = treeArray[i];\r\n  }\r\n  for (i = 0, l = treeArray.length; i < l; i++) {\r\n    var key = tmpMap[treeArray[i].pId];\r\n    if (key) {\r\n      if (!key.children) {\r\n        key.children = [];\r\n        key.children.push(treeArray[i]);\r\n      } else {\r\n        key.children.push(treeArray[i]);\r\n      }\r\n    } else {\r\n      r.push(treeArray[i]);\r\n    }\r\n  }\r\n  return r;\r\n};\r\n\r\nexport function tableHeightFunc() {\r\n  return document.documentElement.clientHeight;\r\n};\r\n\r\n// 数据克隆\r\nexport function deepClone(obj) {\r\n  const objClone = Array.isArray(obj) ? [] : {};\r\n  if (obj && typeof obj === 'object') {\r\n    for (var key in obj) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (obj.hasOwnProperty(key)) {\r\n        // 判断ojb子元素是否为对象，如果是，递归复制\r\n        if (obj[key] && typeof obj[key] === 'object') {\r\n          objClone[key] = this.deepClone(obj[key]);\r\n        } else {\r\n          // 如果不是，简单复制\r\n          objClone[key] = obj[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return objClone;\r\n};\r\n\r\n/**\r\n * @description: 将自定义配置混入默认表头设置\r\n * @param {array} customSetting 后端返回的自定义列配置\r\n * @param {array} defaultColumns 前端写的默认列配置\r\n * @return {type} array\r\n * @author: cyb\r\n */\r\nexport function mixDefaultAndCustomColumns(customSetting, defaultColumns) {\r\n  const mixedColumns = [];\r\n  if (Array.isArray(customSetting) && Array.isArray(defaultColumns)) {\r\n    // 当自定义配置存在时\r\n    if (customSetting.length > 0) {\r\n      for (const item of customSetting) {\r\n        // 找到默认的列\r\n        const defaultColumn = defaultColumns.find(\r\n          column => column.field === item.field\r\n        );\r\n\r\n        if (defaultColumn) {\r\n          // 在默认列中混入自定义配置\r\n          const mixedColumn = Object.assign({}, defaultColumn, {\r\n            minWidth: item.width,\r\n            visible: item.visible,\r\n            required: item.required\r\n          });\r\n\r\n          mixedColumns.push(mixedColumn);\r\n        }\r\n      }\r\n\r\n      // 如果第一列是checkbox，则加入\r\n      if (defaultColumns[1].type && defaultColumns[1].type === 'checkbox') {\r\n        mixedColumns.unshift(defaultColumns[1]);\r\n      }\r\n      // 如果第一列是checkbox，则加入\r\n      if (defaultColumns[0].type && defaultColumns[0].type === 'radio') {\r\n        mixedColumns.unshift(defaultColumns[0]);\r\n      }\r\n      // 如果第一列是checkbox，则加入\r\n      if (defaultColumns[0].type && defaultColumns[0].type === 'checkbox') {\r\n        mixedColumns.unshift(defaultColumns[0]);\r\n      }\r\n\r\n      console.log('7788', customSetting, defaultColumns, mixedColumns);\r\n      for (var i = 0; i < defaultColumns.length; i++) {\r\n        if (defaultColumns[i].eType) {\r\n          var flag = 0;\r\n          for (var j = 0; j < customSetting.length; j++) {\r\n            if (defaultColumns[i].field === customSetting[j].field) {\r\n              flag += 1;\r\n            }\r\n          }\r\n          if (flag === 0) {\r\n            mixedColumns.push(defaultColumns[i]);\r\n          }\r\n        }\r\n      }\r\n\r\n      const length = defaultColumns.length;\r\n      // 如果最后一列是操作，则加入\r\n      if (\r\n        defaultColumns[length - 1].title &&\r\n        defaultColumns[length - 1].title === '操作'\r\n      ) {\r\n        mixedColumns.push(defaultColumns[length - 1]);\r\n      }\r\n      console.log('9999', mixedColumns);\r\n      return mixedColumns;\r\n    } else {\r\n      return defaultColumns;\r\n    }\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * 复杂查询通用方法\r\n */\r\nexport function searchCondetionFunc(conditionArr1 = [], groupOperator = 1, conditionArr2 = []) {\r\n  const conditionJson = {\r\n    conditionJson1: conditionArr1,\r\n    operatorGroup: groupOperator,\r\n    conditionJson2: conditionArr2\r\n  };\r\n  return conditionJson;\r\n}\r\n\r\n/**\r\n * xlsx 导出所需的数据\r\n * @param { Array } filterKeys\r\n * @param { Array } jsonData\r\n */\r\n\r\n// Format and filter json data using filterKeys array\r\nexport function formatJson(filterKeys, jsonData) {\r\n  return jsonData.map((data, index) => filterKeys.map(key => {\r\n    if (data[key] == null || data[key] === '') {\r\n      return '-';\r\n    } else {\r\n      return data[key];\r\n    }\r\n  }));\r\n}\r\n\r\n// 格式转换\r\nexport function getTimeFunc(param) {\r\n  var date = new Date(param);\r\n  var y = date.getFullYear(); // 获取年份\r\n  var m = date.getMonth() + 1; // 获取月份\r\n  var d = date.getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n\r\n  return [y, m, d].join('-');\r\n}\r\n\r\nexport function getTodayFirstDay(param) {\r\n  var date = new Date(param);\r\n  var y = date.getFullYear(); // 获取年份\r\n  var m = date.getMonth() + 1; // 获取月份\r\n  var d = date.getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n\r\n  return [y, m, d].join('-') + ' 00:00:00';\r\n}\r\n\r\n// 当日最晚时间\r\nexport function getTodayLastDay(param) {\r\n  var date = new Date(param);\r\n  var y = date.getFullYear(); // 获取年份\r\n  var m = date.getMonth() + 1; // 获取月份\r\n  var d = date.getDate(); // 获取当月最后一日\r\n  m = m < 10 ? '0' + m : m; // 月份补 0\r\n  d = d < 10 ? '0' + d : d; // 日数补 0\r\n\r\n  return [y, m, d].join('-') + ' 23:59:59';\r\n}\r\n"],"sourceRoot":""}